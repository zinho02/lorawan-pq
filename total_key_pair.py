import matplotlib.pyplot as plt
import numpy as np

algorithms = [
    "ML-DSA", "SLH-DSA", "Falcon", "MiRitH", "MQOM", "PERK", "MIRA", "SDitH",
    "MAYO", "QR-UOV", "SNOVA", "UOV", "LESS", "CROSS", "SQISign", "HAWK", "FAEST"
]

dr_levels = ["DR0", "DR1", "DR2", "DR3", "DR4", "DR5", "DR6"]

times = np.array([
    [338695.86, 189101.75, 84690.62, 36471.48, 18212.54, 10259.13, 5140.66],
    [1877631.25, 1049862.42, 471195.93, 203823.38, 103522.07, 59271.19, 30827.67],
    [124031.86, 69288.82, 31226.74, 13521.78, 7035.77, 4083.57, 2187.64],
    [877212.02, 492794.23, 224153.97, 100081.01, 53517.17, 32931.44, 19699.70],
    [477904.02, 273980.57, 131468.44, 65627.29, 40923.80, 30013.34, 23001.62],
    [926485.27, 518314.77, 233128.72, 90170.13, 51938.58, 30092.31, 16051.09],
    [816097.87, 456665.67, 205556.30, 89522.76, 45976.14, 26748.49, 14395.47],
    [1180960.21, 660346.33, 296451.54, 128333.27, 65225.17, 37393.37, 19504.34],
    [128206.22, 71656.85, 32241.04, 14023.05, 7208.33, 4138.38, 2168.21],
    [1352318.29, 755678.54, 338574.67, 145906.00, 73561.42, 41640.27, 21122.90],
    [83604.42, 46699.46, 21119.94, 9337.80, 4862.92, 2858.95, 1575.37],
    [15265921.62, 8528390.74, 3816833.62, 1640971.86, 823812.69, 463544.92, 231980.63],
    [2448162.11, 1372826.94, 621020.47, 273598.78, 143288.12, 85815.87, 48867.26],
    [1370327.47, 765467.06, 342614.45, 147272.11, 74014.13, 41647.03, 20845.23],
    [26220.97, 16931.24, 10607.02, 7604.65, 6434.22, 5967.78, 5657.77],
    [117228.61, 65446.97, 29357.12, 12701.76, 6482.49, 3679.04, 1872.83],
    [558803.58, 312797.82, 140929.66, 61620.86, 31590.01, 18465.91, 10024.83]
])

shapes = ['o', 's', 'D', '^', 'v', 'p', '*', 'h', 'X', 'P', '<', '>', '8', 'H', '|', '_', '+']

plt.figure(figsize=(12, 6))
for i, (algorithm, shape) in enumerate(zip(algorithms, shapes)):
    plt.plot(dr_levels, times[i], marker=shape, label=algorithm)

plt.yscale('log')

plt.tick_params(axis='both', which='major', labelsize=16)

plt.xlabel("Data Rates (DR)", fontsize=16)
plt.ylabel("Total Time (ms) (Log Scale)", fontsize=16)
plt.grid(True, which="both", linestyle="--", linewidth=0.5)
plt.show()
